name: CI/CD Pipeline

# Run the workflow when code is pushed to the "main" branch
on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from your repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run tests (skip if none)
      - name: Run tests
        run: npm test || echo "No tests found"

  docker:
    runs-on: ubuntu-latest
    needs: build  # wait until build job finishes

    steps:
      # Step 1: Checkout code again for Docker context
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Debug step to check if secrets are available
      - name: Check Secrets Availability
        run: |
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "Docker username is set"
          else
            echo "Docker username is not set"
          fi
          if [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "Docker password is set"
          else
            echo "Docker password is not set"
          fi

      # Step 3: Log in to DockerHub
      - name: Login to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      # Step 4: Build and push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops-pipeline-project:latest